- use_postcode_mapper
- has_jammit_js :mission_dashboard
- has_jammit_js :dashboard
%h2.title Mission Dashboard

#mission-dashboard

  #mission-statistics

    .mission-statistic
      %span.count= @statistics.count :approved, :captains
      %span.description Approved Captains

    .mission-statistic
      %span.count= @statistics.count :approved, :sidekicks
      %span.description Approved Sidekicks

    .mission-statistic
      %span.count= @statistics.count :pending
      %span.description Pending Participations

    .mission-statistic
      %span.count= @statistics.count
      %span.description Total Participations

  = render :partial => 'postcode_map'
  = render :partial => 'report_form'

  #general-participations
    %ul
      = ml "Approved Participations", "#approved-participations"
      = ml "Pending Participations",  "#pending-participations"
      = ml "Sidekick Pickups",        "#sidekick-pickups"
      = ml "User Statistics",         "#mission-user-statistics"

    #approved-participations.collection-columns
      .collection.left
        %h4 Captains
        = participations_listing @statistics.approved_captains, :show_role => false, :show_state => false

      .collection.right
        %h4 Sidekicks
        = participations_listing @statistics.approved_sidekicks, :show_role => false, :show_state => false

    #pending-participations.collection
      = participations_listing @statistics.pending_participations

    #sidekick-pickups
      #pickups-map
      %ul#pickups
        - @statistics.pickups.each_pair do |mp, participations|
          %li
            %h4
              %span.pickup-name= mp.pickup.name
              at
              %span.pickup-at=l mp.pickup_at, :format => :pickup_time
            - if participations.empty?
              %p.empty This pickup currently has no sidekicks registered.
            - else
              %ul.participations
                - participations.each do |participation|
                  %li= link_to participation.user.name, [:admin, @mission, participation]

    #mission-user-statistics

      #user-signups.statistic
        %h3 User Signups By Date
        #signups-chart.dashboard-chart= dl_for_stat @user_stats

      #user-ages.statistic
        %h3 Users per Age
        %p
          == There are #{pluralize @user_ages.count, 'user'} with ages from
          == #{@user_ages.min_age} to #{@user_ages.max_age}. The mean user age
          == is #{@user_ages.mean}.
        #ages-chart.dashboard-chart
          %dl
            - @user_ages.data.each_pair do |age, value|
              - if age > @user_ages.window_min && age < @user_ages.window_max
                %dt= age
                %dd= value

      #user-origins.statistic
        %h3 Users per Origin
        #origins-chart.dashboard-chart
          %dl
            - @origin_counts.each_pair do |origin, count|
              - if count > 0
                %dt= origin
                %dd= count
        - unless @other_origins.blank?
          %h4
            = link_to "Other Known Origins", "#", :class => 'other-known-origins-toggle'
          %ul#user-origins-list
            - @other_origins.each do |name, count|
              %li
                %span.origin-count= pluralize count, "user"
                from
                %span.origin-name= name


      #user-volunteering-history.statistic
        %h3 User answers to "Have you volunteered in the last year"
        #volunteering-chart.dashboard-chart= dl_for_stat @user_volunteering_history

      #user-genders.statistic
        %h3 Users per Gender
        #genders-chart.dashboard-chart= dl_for_stat @user_genders