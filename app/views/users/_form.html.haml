- has_js 'bhm/signup'

- if flash[:profile_notice].present?
  %p#profile-notice= flash[:profile_notice]

- semantic_form_for @user do |form|
  
  - form.inputs :name => "Your Account Details" do
    = form.input :login, :hint => "The next time you visit this site, you'll need this to access your account again. Also, if you don't provide a display name, other users will see you on the site like this.", :required => @user.new_record?
    = form.input :email, :hint => "We promise we'll only use this for good - You'll get an email when you sign up, a couple when you join missions and at miscellaneous times during the process. Also, if you choose mailing lists below you'll be subscribed to them with this address."
    = form.input :password, :hint => (@user.new_record? ? "Next time you visit the site, you'll need this password to login." : "This will update your password / let you sign in with a password if you signed up using an external service."), :required => @user.new_record?
    = form.input :password_confirmation
    
  - form.inputs :name => "Tell us about yourself" do
    = form.input :date_of_birth, :start_year => (Time.now.year - 100), :end_year => Time.now.year
    = form.input :display_name, :hint => "This is what will typically be shown to other users on the site. If left blank, other users will be shown your login."
    = form.input :first_name
    = form.input :last_name
    = form.input :postcode, :hint => "We'll use this strictly for planning and statistics purposes (we may be able to adjust our Bat-mobus route to be closer to your secret hideout)."
    = form.input :phone, :hint => "We respect your privacy - this number will only be shared with your captain on missions for planning / safety reasons."
    
    - if form.object.origin.blank? || form.object.origin_changed?
      = form.input :origin, :as => input_type_for_origin(form.object.origin), :collection => User::ORIGIN_CHOICES

  - form.inputs :name => "Mailing List Subscriptions" do
    = form.input :mailing_list_ids, :collection => MailingLists.for_select, :as => :check_boxes
    
  - form.buttons do
    = form.commit_button(@user.new_record? ? {:cancel => {:url => :new_user, :text => "Change Account Type", :id => "auth-selector-link"}} : {})